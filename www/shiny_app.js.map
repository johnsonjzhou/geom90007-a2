{"version":3,"file":"shiny_app.js","mappings":"uBAUMA,EAYAC,EAWAC,EASEC,EAhCFH,EAAiB,SAACI,GAA+B,IAAxBC,IAAwB,yDAC/CC,EAASC,SAASC,cAAc,kCACtCJ,GAASA,EAAMK,UAAUC,IAAI,UAC7BN,GAASC,GAAgBC,EAAOG,UAAUC,IAAI,MAC/C,EAQKT,EAAmB,SAACG,GAA+B,IAAxBC,IAAwB,yDACjDC,EAASC,SAASC,cAAc,kCACtCJ,GAASA,EAAMK,UAAUE,OAAO,UAChCP,GAASC,GAAgBC,EAAOG,UAAUE,OAAO,MAClD,EAOKT,EAAiB,SAACE,GACtBA,GAASA,EAAMK,UAAUC,IAAI,WAC9B,EAOOP,EAAmB,SAACC,GACxBA,GAASA,EAAMK,UAAUE,OAAO,WACjC,EAQDC,OAASA,MAAMC,wBAAwB,cAAc,SAACC,GACpD,IAAMV,EAAQG,SAASC,cAAc,iCACrCR,EAAeI,EAChB,IAGDQ,OAASA,MAAMC,wBAAwB,eAAe,SAACC,GACrD,IAAMV,EAAQG,SAASC,cAAc,iCACrCP,EAAiBG,EAClB,IAGDQ,OAASA,MAAMC,wBAAwB,eAAe,SAACC,GACrD,IAAMV,EAAQG,SAASC,cAAc,kCACrCR,EAAeI,EAChB,IAGDQ,OAASA,MAAMC,wBAAwB,gBAAgB,SAACC,GACtD,IAAMV,EAAQG,SAASC,cAAc,kCACrCP,EAAiBG,EAClB,IAGDQ,OAASA,MAAMC,wBAAwB,iBAAiB,SAACC,GACvD,IAAMV,EAAQG,SAASC,cAAc,oCAC/BO,EAASR,SAASC,cAAc,kCAChCQ,EAAQT,SAASC,cAAc,iCACrCR,EAAeI,GAAO,GACtBF,EAAea,GACfb,EAAec,EAChB,IAGDJ,OAASA,MAAMC,wBAAwB,kBAAkB,SAACC,GACxD,IAAMV,EAAQG,SAASC,cAAc,oCAC/BO,EAASR,SAASC,cAAc,kCAChCQ,EAAQT,SAASC,cAAc,iCACrCP,EAAiBG,GAAO,GACxBD,EAAiBY,GACjBZ,EAAiBa,EAClB,IAGDJ,OAASA,MAAMC,wBAAwB,oBAAoB,SAACC,GAC1D,IAAMV,EAAQG,SAASC,cAAc,uCAC/BO,EAASR,SAASC,cAAc,kCAChCQ,EAAQT,SAASC,cAAc,iCACrCR,EAAeI,GAAO,GACtBF,EAAea,GACfb,EAAec,EAChB,IAGDJ,OAASA,MAAMC,wBAAwB,qBAAqB,SAACC,GAC3D,IAAMV,EAAQG,SAASC,cAAc,uCAC/BO,EAASR,SAASC,cAAc,kCAChCQ,EAAQT,SAASC,cAAc,iCACrCP,EAAiBG,GAAO,GACxBD,EAAiBY,GACjBZ,EAAiBa,EAClB,ICtGDC,OAAOC,OAAS,WCNhBC,UAAUC,UAAUC,SAAS,gBAC3BJ,OAAOK,MAAM,mDDOd,C","sources":["webpack://geom90007-a2/./src/js/events.js","webpack://geom90007-a2/./src/js/_build.js","webpack://geom90007-a2/./src/js/user_agent.js"],"sourcesContent":["/**\n  Handling of reactive event messages from Shiny\n */\n\n/**\n  Opens a tabPanel while adding effects\n  @param {DOMElement} panel a DOM element representing a Shiny tabPanel\n  @param {boolean} [dimmer=true] whether to toggle dimmer panel\n  @return void\n */\nconst activate_panel = (panel, apply_dimmer = true) => {\n  const dimmer = document.querySelector(\"[data-value='Dimmer'].tab-pane\");\n  panel && panel.classList.add(\"active\");\n  panel && apply_dimmer && dimmer.classList.add(\"dim\");\n}\n\n/**\n  Closes a tabPanel while adding effects\n  @param {DOMElement} panel a DOM element representing a Shiny tabPanel\n  @param {boolean} [dimmer=true] whether to toggle dimmer panel\n  @return void\n */\nconst deactivate_panel = (panel, apply_dimmer = true) => {\n  const dimmer = document.querySelector(\"[data-value='Dimmer'].tab-pane\");\n  panel && panel.classList.remove(\"active\");\n  panel && apply_dimmer && dimmer.classList.remove(\"dim\");\n}\n\n/**\n  Applys an \"underlay\" class to the \"Detail\" panel\n  @param {DOMElement} panel a DOM element representing a Shiny tabPanel\n  @return void\n */\nconst apply_underlay = (panel) => {\n  panel && panel.classList.add(\"underlay\");\n}\n\n/**\n  Removes an \"underlay\" class to the \"Detail\" panel\n  @param {DOMElement} panel a DOM element representing a Shiny tabPanel\n  @return void\n */\n  const restore_underlay = (panel) => {\n    panel && panel.classList.remove(\"underlay\");\n  }\n\n/**\n  Loads and binds event handlers for Shiny custom messages\n  @return void\n */\nconst load_event_handlers = () => {\n  // Open the About panel\n  Shiny && Shiny.addCustomMessageHandler(\"about_open\", (message) => {\n    const panel = document.querySelector(\"[data-value='About'].tab-pane\");\n    activate_panel(panel)\n  })\n  \n  // Close the About panel\n  Shiny && Shiny.addCustomMessageHandler(\"about_close\", (message) => {\n    const panel = document.querySelector(\"[data-value='About'].tab-pane\");\n    deactivate_panel(panel)\n  })\n  \n  // Open the Detail panel\n  Shiny && Shiny.addCustomMessageHandler(\"detail_open\", (message) => {\n    const panel = document.querySelector(\"[data-value='Detail'].tab-pane\");\n    activate_panel(panel)\n  })\n  \n  // Close the Detail panel\n  Shiny && Shiny.addCustomMessageHandler(\"detail_close\", (message) => {\n    const panel = document.querySelector(\"[data-value='Detail'].tab-pane\");\n    deactivate_panel(panel)\n  })\n  \n  // Open the Info_Map panel\n  Shiny && Shiny.addCustomMessageHandler(\"info_map_open\", (message) => {\n    const panel = document.querySelector(\"[data-value='Info_Map'].tab-pane\");\n    const detail = document.querySelector(\"[data-value='Detail'].tab-pane\");\n    const about = document.querySelector(\"[data-value='About'].tab-pane\");\n    activate_panel(panel, false);\n    apply_underlay(detail);\n    apply_underlay(about);\n  })\n  \n  // Close the Info_Map panel\n  Shiny && Shiny.addCustomMessageHandler(\"info_map_close\", (message) => {\n    const panel = document.querySelector(\"[data-value='Info_Map'].tab-pane\");\n    const detail = document.querySelector(\"[data-value='Detail'].tab-pane\");\n    const about = document.querySelector(\"[data-value='About'].tab-pane\");\n    deactivate_panel(panel, false);\n    restore_underlay(detail);\n    restore_underlay(about);\n  })\n  \n  // Open the Info_Detail panel\n  Shiny && Shiny.addCustomMessageHandler(\"info_detail_open\", (message) => {\n    const panel = document.querySelector(\"[data-value='Info_Detail'].tab-pane\");\n    const detail = document.querySelector(\"[data-value='Detail'].tab-pane\");\n    const about = document.querySelector(\"[data-value='About'].tab-pane\");\n    activate_panel(panel, false);\n    apply_underlay(detail);\n    apply_underlay(about);\n  })\n  \n  // Close the Info_Detail panel\n  Shiny && Shiny.addCustomMessageHandler(\"info_detail_close\", (message) => {\n    const panel = document.querySelector(\"[data-value='Info_Detail'].tab-pane\");\n    const detail = document.querySelector(\"[data-value='Detail'].tab-pane\");\n    const about = document.querySelector(\"[data-value='About'].tab-pane\");\n    deactivate_panel(panel, false);\n    restore_underlay(detail);\n    restore_underlay(about);\n  })\n}\n\nexport {\n  load_event_handlers\n};\n","/**\n  Scripts used in the Shiny app\n */\n\nimport { check_user_agent } from \"./user_agent.js\"\nimport { load_event_handlers } from \"./events.js\"\n\n(() => {\n  \n  load_event_handlers();\n  \n  window.onload = () => {\n    check_user_agent();\n  }\n  \n})()","/**\n  Checks the user agent and loads a helpful message\n */\nconst check_user_agent = () => {\n  // pop up message for WebQTEngine browsers (built in)\n  navigator.userAgent.includes(\"QtWebEngine\") &&\n    window.alert(\"For best effect, please use an external browser.\");\n};\n\nexport {\n  check_user_agent\n};"],"names":["activate_panel","deactivate_panel","apply_underlay","restore_underlay","panel","apply_dimmer","dimmer","document","querySelector","classList","add","remove","Shiny","addCustomMessageHandler","message","detail","about","window","onload","navigator","userAgent","includes","alert"],"sourceRoot":""}